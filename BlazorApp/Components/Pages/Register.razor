@page "/register"
@inject LocationService locationService
@layout Layout.EmptyAppBarLayout

<PageTitle>Criar conta</PageTitle>

<style type="text/css">
	.input-form {
		width: 50%;
		margin-bottom: 1.5rem;
	}

</style>

<MudContainer Class="w-100 d-flex flex-row ms-0">
	<MudCard Class="mt-10 h-100 d-flex flex-column w-50 justify-content-around align-items-center p-4">
		<MudForm Class="w-100 h-100 mb-5">
			<MudText Typo="Typo.h5" Class="mb-7">
				Dados do usuário
			</MudText>
			<MudTextField T="string" Placeholder="Nome" Class="input-form"></MudTextField>
			<MudTextField T="string" Placeholder="Email" Class="input-form"></MudTextField>
			<MudTextField T="string" Placeholder="Senha" Class="input-form"></MudTextField>
		</MudForm>
		<MudForm Class="w-100 h-100 mt-5">
			<MudText Typo="Typo.h5" Class="mb-5">
				Dados do condomínio
			</MudText>
			<MudSelect T="string" Value="_country" ValueChanged="@(async (string _country) => await LoadStates(_country))" Class="input-form"  Label="País" Disabled="_countries == null || !_countries.Any()">
				@if (_countries != null && _countries.Any())
				{
					@foreach (var country in _countries)
					{
						<MudSelectItem Value="@country">@country</MudSelectItem>
					}
				}
			</MudSelect>
			<MudSelect Class="input-form" @bind-Value="_state" Label="Estado" Disabled="_states == null || !_states.Any()">
				@if (_states != null && _states.Any()) {
					@foreach (var state in _states) {
						<MudSelectItem Value="@state">@state</MudSelectItem>
					}
				}
			</MudSelect>
			<MudTextField T="string" Class="input-form"></MudTextField>
		</MudForm>
	</MudCard>
	<MudImage Src="/register-condominium.jpg" Class="vh-100 w-50 position-absolute top-0 end-0"></MudImage>
</MudContainer>

@code{
	List<string> _countries;
	List<string> _states;
	List<string> _cities;

	string _country;
	string _state;
	string _city;

	protected override async Task OnInitializedAsync()
	{
		_countries = await locationService.GetCountries();
		StateHasChanged();
	}

	async Task LoadStates(string country) {
		_country = country;
		_states = await locationService.GetStates(_country);
		StateHasChanged();
	}

	string value;
}