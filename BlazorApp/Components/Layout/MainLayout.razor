@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime
@inject ISnackbar Snackbar
<MudPopoverProvider />
<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<style>
    .top-bar {
        background-color: #ffffff !important;
    }
</style>

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code
{
    HubConnection _hubConnection;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var token = await JSRuntime.InvokeAsync<string>("getToken");
            _hubConnection = new HubConnectionBuilder()
                .WithUrl("https://localhost:7031/notificationHub", options =>
                {
                    options.Headers.Add("Authorization", $"Bearer {token}");
                })
                .WithAutomaticReconnect()
                .Build();
            
            
            _hubConnection.On<NotificationPayload>("AdminReceiveNotification", (message) =>
            {
                Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopRight;
                Snackbar.Add
                (
                    @<div>
                        <h5>@message.Header</h5>
                        <ul>
                            <li>@message.Body</li>
                        </ul>
                    </div>,
                    Severity.Info
                );
            });
            _hubConnection.On<NotificationPayload>("UserReceiveNotification", (message) =>
            {
                Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopRight;
                Snackbar.Add
                (
                    @<div>
                        <h5>@message.Header</h5>
                        <ul>
                            <li>@message.Body</li>
                        </ul>
                    </div>,
                    Severity.Info
                );
            });
            await _hubConnection.StartAsync();
        }
    }
}
